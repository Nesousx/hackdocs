<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Website Hacking on HackDocs</title><link>/gaining-access/website-hacking/</link><description>Recent content in Website Hacking on HackDocs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 May 2022 13:03:15 +0200</lastBuildDate><atom:link href="/gaining-access/website-hacking/index.xml" rel="self" type="application/rss+xml"/><item><title>LFI</title><link>/gaining-access/website-hacking/lfi/</link><pubDate>Wed, 04 May 2022 13:03:15 +0200</pubDate><guid>/gaining-access/website-hacking/lfi/</guid><description>LFI General info Some LFI will look like so : http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../wp-config.php
Sometimes, the several &amp;lsquo;../../../&amp;rsquo; can be translated to : //, eg. :
http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=//wp-config.php
This is better looking, and shorter&amp;hellip;
In this case, the LFI can also be used to get a list of all running process by using the info from the /proc filesytem. However, since the LFI return &amp;ldquo;entire&amp;rdquo; PHP code, it means we won&amp;rsquo;t be able to execute any code.</description></item></channel></rss>